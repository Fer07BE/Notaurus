import * as readline from 'node:readline/promises'
import { stdin, stdout } from 'node:process'

class CliView {
  #rl
  #tty
  #paused = false

  constructor () {
    this.#rl = readline.createInterface({ input: stdin, output: stdout })
    this.#tty = new readline.Readline(stdout)
  }

  /**
   * Yield user-input lines.
   */
  async * eventStream () {
    const tty = this.#tty
    this.#rl.prompt()
    for await (const line of this.#rl) {
      if (!this.#paused && line.trim()) {
        /* Write the input on the line above, then a new prompt */
        tty.moveCursor(0, -1)
        tty.clearLine(0)
        tty.cursorTo(0)
        tty.commit()
        yield line
        this.#rl.prompt()
      } else {
        this.#rl.prompt()
      }
    }
  }

  async displayMessage (msg, options = {}) {
    const rl = this.#rl
    const tty = this.#tty
    tty.clearLine(0)
    tty.cursorTo(0)
    tty.commit()
    console.error(msg)
    if (!options.skipPrompt) {
      rl.prompt(true)
    }
  }

  disable () {
    this.#paused = true
    this.#rl.pause()
  }

  enable () {
    this.#paused = false
    this.#rl.resume()
  }
}

export default CliView
